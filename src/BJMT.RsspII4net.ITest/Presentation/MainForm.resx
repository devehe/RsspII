<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openTestFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>180, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        FAAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGNIAA+ID5QbnD+oD6QbnBuUG5APiA+UG5w/qA+kG5wblBuRgAAPnA+UD6APZ
        A9sD3QPaA+ED2wPYA9UD0wbQA+UD5gPnA+UD6APZA9sD3QPaA+ED2wPYA9UD0wbQA+UD5mMAA+0D5APl
        A+YD4wPuA+wD6QPgA9sD1wbcA84D2QMAA+0D5APlA+YD4wPuA+wD6QPgA9sD1wbcA84D2WYAA88D2APe
        A+MD6QPoA8cD3gPcA9MDzwPMA9YJAAPPAtYB1wLbAd0C4AHiAucB6AHlAeYB5wHEAcUBxgLbAd0B2QHa
        AdsC0QHSAs0BzgLKAcsD1mkAA3sGHgMfAyAGIQMgAx8GHgMZA90JAAGAAXkBcwHOAZABTQHZAaABVwHl
        AbABXwHtAbwBZgHzAcUBawH1AccBbAHxAcIBagHqAbcBYwHgAaoBXAHUAZoBUwHUAZEBSwPdaQADdwMW
        AxoDGwYeAyADHwMdAxsDFwMQA94JAAGBAXoBdQHCAYUBRwHNAZEBTgHVAZ8BVgHeAakBXAHjAa8BXwHl
        Aa8BYAHiAa0BXgHbAaUBWgHTAZoBUgHJAYwBTQHIAYUBRQPeaQADcwMPAxUDFwMaAxwDHgMbAxgDFgMR
        AwcD3gkAAYIBewF1AbgBeAFBAcIBhAFFAcoBjgFMAdEBlAFQAdUBmwFRAdcBnAFTAdQBmQFSAc4BkwFN
        AccBigFIAb0BgAFEAb0BeAE9A95pAANyAwwDEgMZAxwDHgMfAx0DGQMUAw4DAgPgCQABgQF6AXUBrQFr
        ATgBsgFyATwBuwF7AUABwQGDAUUBwwGFAUgBxAGHAUkBwwGFAUcBvwF/AUMBuAF3AT4BsQFvAToBsgFs
        ATUD4GkAA3QDEgMYAyADJgMpAygDJwMiAxwDFQEHAgYD4QkAAYUBfwF4AcYBiQFOAcoBkQFYAcwBmAFl
        AdABngFuAdIBoAFyAdIBogFzAdEBoAFxAc8BmgFqAcwBlQFgAcgBjQFUAc4BigFJA+FpAAN4AxgDIQMp
        AzADNAMzAzIDLAMkAxoCDAELAeEC4AkAAYgBggF7AdkBnwFlAd8BqwF2AeIBtQGIAeUBvQGVAecBwgGc
        AegBwwGeAecBwAGaAeQBuQGPAeEBsQGBAd0BpgFwAeIBogFfA+BpAAN7Ax0DJwMvAzgDPgM9AzsDNAMr
        AyEBEAIPAeIC4QkAAYwBhQF+AesBtAF9Ae8BwgGUAfIBzQGpAfUB1wG6AfYB3QHFAfcB3wHHAfYB2wHB
        AfQB0wGzAfEByAGgAe4BvAGLAfIBuAF2A+FpAAN9Ax8DKwM2Az8DRQNGA0IDOQMvAyMCEwESA94JAAGP
        AYcBgQH3AcIBjgH6Ac8BqQH7AdwBwQH8AekB1gH9AfEB5QH9AfMB6QH9Ae4B4AH8AeMBzQH5AdgBtgH5
        AckBnQH+AcUBhwPeaQADqAN0A3sDgQOHBosDhwOBA3sDdANqA98JAAGrAakBqAGYAY0BgwGYAZEBiQGZ
        AZUBkAGaAZkBlQGaAZkBmAGZApoBmAGXAZYBlwGTAZABlgGQAYoBlQGMAYMBlAGJAXwD3/8A/wAVAAH8
        Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH0Ad4CvAF6ARQBvAF6ARQBvAF6ARQB/AHu
        AdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQM/wL7Af0C5gHpA9MDwAO/A8ID2QLwAfID/RX/
        AfwB/QH8AekB7AHqA88BwAHBAcABvQG/Ab0BxQHIAcUB2gHdAdsB8QHyAfED/Qn/MAAB/AHuAdQB/AHu
        AdQB/AHuAdQBxAGGASwB1AGeAVQB/AHuAdQBxAGCASQBvAF6ARQBvAF6ARQBvAF6ARQB/AHqAdQB/AHu
        AdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQJ/wLuAe8CuAG9Ak8BmQIXAYECAwF9AgIBdQIeAV8CUwFw
        A6cD2QL5AfwP/wHuAu8BugG7AboBaQGFAWwBPgFjAUMBLgFYATQBKAFRAS0BMgFIATUBWgFkAVsBogGm
        AaIB2wHeAdwB+wH8AfsG/wMAA4ADAAOAAwADgAMAA4ADAAOAAwADgAMAA4AGAAH8Ae4B1AH8Ae4B1AG8
        AXoBFAG8AXoBFAG8AXoBFAHUAZ4BVAH8Ae4B1AG8AXoBFAG8AXoBFAG8AXoBFAH8Ae4B1AH8Ae4B1AH8
        AeoB1AH8AeoB1AH8Ae4B1AH8Ae4B1Ab/AusB7QJgAbACAwGlAgIBogIDAZYCAwGIAgMBgAICAW0CAgFQ
        AgwBQAJzAXUDzAL5AfsJ/wHtAe4B7QGHAaABigFKAYUBUgFDAXoBSgE+AXEBRQE0AWEBOQEtAVcBMgEn
        AUwBLAEZATMBHQEZAScBGgF0AXUBdAPNA/sD/wMAKsADAAH8Ae4B1AH8Ae4B1AG8AXoBFAG8AXoBFAG8
        AXoBFAG8AX4BHAH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AHMAZYBRAH8AeoB1AH8
        Ae4B1AH8Ae4B1AP/A/kCZQHFAgYBvwIEAb0CBAGtAgQBqQIDAaUCAwGMAgMBiAIDAWsCAQFHAgEBOwJz
        AXUD2QP9A/8B+gH7AfoBmAG5AZ0BZAGlAW4BWgGbAWQBUAGPAVoBjQGjAZABQwF6AUoBOwFwAUMBMAFa
        ATcBIwFFASgBGQEzARwBDwEhARIBdAF1AXQB2wHeAdwD/QMAHv8JAAP/AwAB/AHuAdQB/AHuAdQB/AHu
        AdQBvAF6ARQBvAF6ARQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHu
        AdQB/AHuAdQB/AHuAdQB/AHuAdQD/wLBAd0CIgHdAhQBzwJ5AbACaAHVAgQBvgIEAbcCBAGvAgkBoAK4
        AcYCSQGKAgIBUwIMAUUDpwLxAfID/wHRAdsB0gGEAcUBjgFzAbcBfQFmAa8BbgGqAbgBrAP8AdEB4AHT
        AUsBhgFTATwBcQFEAS8BWQE1ASMBRQEnAR0BOgEhAR0BMQEgAaIBpgGjAfEC8gMAKsADAAH8Ae4B1AH8
        Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8
        Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AP3AlIB4QIwAeQCIQG6A7MD+QKKAegCAwHSAgUBygK3
        AdID/wKjAcICAQFtAgIBWAJTAXED3AP3AbAB2gG3AZkB1gGjAYUByAGPAb4BzwHAA/4D7QP8AaoByAGu
        AUkBhgFUATwBcAFEATIBXQE4AScBTQEsAR4BPAEiAVwBZwFdAdoB3gHbMAAB/AHuAdQBvAF6ARQBvAF6
        ARQB3AG2AXwB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHu
        AdQB/AHuAdQB/AHuAdQB/AHuAdQD8QJTAfMCRAHxAjEB7wIyAb8DpwP5ApMB7wLPAecD/wK3AdICCAGg
        AgMBiAIDAXgCHgFlAsIBxAHwAfEB8AHBAe8ByQGvAeQBuAGuAbUBrwP/Ac8B2AHRAXUBnwF7Ab4BvwG+
        A/8BjAG5AZIBTQGLAVYBQQF4AUgBNQFiATsBKgFRATABNAFPATgBxQHIAcYJABvAA4AJAAH8Ae4B1AG8
        AXoBFAG8AXoBFAG8AXoBFAH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8
        Ae4B1AH8Ae4B1AH0AeIBxAG8AXoBFAH8Ae4B1APvAmEB9AJOAfICOwHuAigB8AIlAcUDrAP9A/8C1QHo
        AgIBxQIEAa8CAwGlAgMBggIDAYADvAPvAc4B9gHXAcEB7wHKAXgBgQF5A8wBkAHbAZsBgwHTAY8BagF9
        AW0B0AHUAdED/QFjAZ8BbAFMAYcBVAE7AXABQwEzAWABOAEvAVoBNQG9Ab8BvQkAA8ADgBIAA4ADwAkA
        AfwB7gHUAbwBegEUAbwBegEUAbwBegEUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHU
        AfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB5gHMAfwB7gHUA+8CbQH0AmAB9AJJAfICMwHvAiYB7AK4
        AdcD/wP9ApMB7wIEAdYCBAG5AgMBpQIDAYkCAwGBAr8BwAHwAfEB8AHXAfcB3gHRAfYB2QHGAfEBzgG0
        AekBvgGkAeQBrgGRAdsBnAGDAdIBjwFuAXkBbwPdAe8B9gHwAVoBmAFkAUoBhQFSATgBaAE/ATQBYAE7
        AcABwQHACQADwAMAA8AG/wPABv8DAAPACQAB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHu
        AdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHu
        AdQD9wKAAfYCbgH1AlwB9AJKAfICuAHTA/8C0gHgA6wD8gKbAewCBQHAAgQBrQIDAZ8CFwGEA9AD9wHd
        AfkB4wHZAfgB4AHTAfcB2wHHAfIBzwG2AeoBvwGkAeQBrwGSAdwBngGHAdYBkgF4AYIBegHnAekB5wHS
        AeIB1AFQAYoBWQFCAXcBSQFEAWsBSQPPCQADwAMAA/8DwAb/A8AD/wMAA8AJAAH8Ae4B1AH8Ae4B1AH8
        Ae4B1AH8AeoB1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AH8
        Ae4B1AH8Ae4B1AH8Ae4B1AH8Ae4B1AP/ApoB+AKMAfcCegH2AqoBwgP+AtIB4QIpAecCIAHUA44D7wKu
        AewCBAG1AgMBpQJKAZgC5gHqA/8B4gH3AecB4AH4AeUB2wH4AeEB1AH3AdwBxgHyAc8BtwHsAcABqQHm
        AbMBmgHfAaUBhQHJAY8DiwHxAvIBsgHMAbUBTQGEAVUBbQGJAXEB6QHsAeoJAAPAAwADwAP/A8AG/wPA
        AwADwAkAAfwB7gHUAfwB7gHUAfwB6gHUAbwBegEUAbwBegEUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHU
        AfwB7gHUAfwB7gHUAfwB7gHUAbwBegEUAcQBggEkAfwB7gHUAfwB7gHUA/8C3wH2Aq4B+QKWAfcDegLC
        AccCQgHsAjsB7gIxAfACJgHeA4wCeQGuAgQBvQIEAa0CuAG9AvsB/QP/AfAB9wHyAecB+wHsAeEB+gHn
        Ad8B+QHlAdYB9wHdAcgB8wHRAboB7gHEAasB5gG1AZ0B4AGoAXoBtwGAA48BVwGDAV4BUgGNAVsBugG7
        AboB/AH9AfwJAAPAAwAD/wPAA/8DwAb/AwADwAkAAfwB7gHUAfwB7gHUAeQBxgGUAbwBegEUAbwBegEU
        AfwB6gHUAfwB7gHUAfwB6gHUAcwBmgFMAfwB7gHUAfwB7gHUAfwB7gHUAbwBegEUAbwBegEUAfwB7gHU
        AfwB7gHUA/8D/gLPAfcCvAH6Ap8B9wJ6Ae4CYQH0Ak0B8gJEAfECNQHwAicBzwIaAd8CCwHGAmABsALu
        Ae8G/wP+Ae8B9wHwAe8B+QHwAecB+wHsAd0B+QHjAdYB9wHdAcwB9QHVAcAB7wHJAbMB6QG8AZ8B2wGp
        AYgByAGSAW0BsAF2AYgBpgGJA+8D/wkAA8ADgBIAA4ADwAkAAfwB7gHUAfwB7gHUAfwB7gHUAewBygGc
        AfwB6gHUAfwB7gHUAfwB7gHUAbwBegEUAbwBegEUAcwBlgFEAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHU
        AfwB7gHUAfwB7gHUBv8C+wH9AtIB9QKyAfoClQH4AnQB9gJnAfQCVgHzAkwB8gI5AewCJwHeAmQBygLr
        Ae0M/wH8Av0B8QH2AfIB7gH6AfAB4gH6AegB2wH5AeEB1wH3Ad4B0gH3AdoBxAHxAc0BswHmAbwBmwHW
        AaQBngHBAaMB7QLuBv8JAB7ACQAB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHu
        AdQB7AHOAaQBvAF6ARQB/AHqAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQB/AHuAdQJ/wP+
        AuEB9gKhAfYChwH3AnYB9QJpAfQCXwH0AmAB7QLCAd0D8xL/A/4B8gH2AfMB5AH3AegB4QH4AeYB2wH4
        AeEB1gH3Ad0B1AH3AdsBwwHoAcoB1gHdAdcB9AH1AfQJ/zAAAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHU
        AfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHUAfwB7gHU
        AfwB7gHUAfwB7gHUEv8D9wbvA/ED+yH/A/cG7wHwAfEB8AP7D/8BQgFNAT4HAAE+AwABKAMAAUADAAEg
        AwABAQEAAQEGAAEBFgAD/wEABP8UAAGAAQABgAUAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEBAcABAQQA
        AcABAQHAAQEEAAHAAQEBwAEBBAABwAEBAcABAQQAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEBAcABAQQA
        AcABAQHAAQEEAAT/BAAE/wQAAv8GAAGAAQEmAAGAAQEGAAHAAQMGAAHAAQMGAAHAAQMGAAHAAQMGAAHA
        AQMGAAHAAQMGAAHAAQMGAAHAAQMGAAHgAQcGAAs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAAAAADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIiIiIiIiAAAAAAAAAAAD5l5l5l3
        d3iAAAAAAAAAAA93d3d3d3d4iAAAAAAAAAAP////////+IgAAAAAAAAAAAAAAAAAAA+ICIiIiIgAAAAL
        e3t7e3sw+AiHd3d4gAAAB7e3t7e3MwAIh3d3eIgAAAt7e3t7ezMwiId3d3iIgAAP//////8zMIh3d3d4
        iIAAB7ewsLC3szCHd///+IiAAAB7ewsLe3MwiIh3d3+IgAAAB7CwsLe3AAAAAACI+IAAMzB7e3t7cDMw
        iHd4CI+AAPswsAAABwMzMH/3eIAAAAC/MHAzMwsDvzAAD3iAAAAAC/MAe/swC/sEzA94gAAAAAAPv7+/
        v7+ATMwPeIAAAAAAAAAAAAAAzMzMD3iAAAAAAAAAB4DMzMzMzA94gAAAAAAAAAeAzszMzMwPeIAAAAAA
        AAAHgM7MzMzMD3iAAAAAAAAAB4DMzMzMzA94gAAAAAAAAAeAAAAAAAAPeIAAAAAAAAAHeIiIiIiIh3iA
        AAAAAAAAB3d3d3d3d3d4gAAAAAAAAAD/////////+IAAAAAAAAAAB3d3d3d3d3+AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////gAD//wAAf/8AAD//AAAf/wAA
        AA+AAAAHwAAAA8AAAAHAAAAAwAAAAMAAAADgAAAAgAAAAIAAAACAAAABgAAAD8AAAA/gAAAP+AAAD/8A
        AA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//gAAP/8AAD//gAB///////////w==
</value>
  </data>
</root>